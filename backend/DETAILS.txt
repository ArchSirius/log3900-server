/*************************
* LOG3900-01 A16 backend *
* API 24/11/16           *
*************************/

/*
* User
*/
GET    /api/users
POST   /api/users
GET    /api/users/me
GET    /api/users/:id
PUT    /api/users/:id
DELETE /api/users/:id
PUT    /api/users/:id/password
POST   /api/users/friend
POST   /api/users/unfriend

/*
* Zone
*/
GET    /api/zones
POST   /api/zones
GET    /api/zones/:id
PUT    /api/zones/:id
DELETE /api/zones/:id

/*
* Auth
*/
POST   /auth/login


/*************************
* LOG3900-01 A16 backend *
* Socket.io 28/11/16     *
*************************/

/*
* Client->Server
*/
connect
authenticate
init:chat
disconnect
join:chatroom
join:zone
leave:zone
send:group:message
send:private:message
send:message [deprecated since 14-11-16]
edit:nodes
create:nodes
delete:nodes
lock:nodes
unlock:nodes
ping:position

/*
* Server->Client
*/
connect
init
send:group:message
send:private:message
send:message [deprecated since 14-11-16]
user:join
user:left
joined:chatroom
left:chatroom
join:zone
joined:zone
leave:zone
left:zone
assign:startpoint
assigned:startpoint
unassign:startpoint
edit:nodes
edited:nodes
create:nodes
created:nodes
delete:nodes
deleted:nodes
lock:nodes
locked:nodes
unlock:nodes
unlocked:nodes
ping:position


/*************************
* LOG3900-01 A16 backend *
* User API details       *
*************************/

/*****************
* GET /api/users *
*****************/
Description : Returns a list of user profiles
Restrictions: Authenticated
Headers     : x-access-token
Body        : --
Returns     : Users profiles

/******************
* POST /api/users *
******************/
Description : Creates a new user and returns details and token if success
Restrictions: --
Headers     : --
Body        : username [String] [not null] [unique check]
            : email    [String] [not null] [unique check]
            : name     [String]
            : password [String] [not null]
Returns     : User details and Token

/********************
* GET /api/users/me *
********************/
Description : Returns user details
Restrictions: Authenticated
Headers     : x-access-token
Body        : --
Returns     : User details

/*********************
* GET /api/users/:id *
*********************/
Description : Returns a user profile
Restrictions: --
Headers     : --
Body        : --
Returns     : User profile

/*************************
* PUT /api/users/:userId *
*************************/
Description : Updates a user infos
Restrictions: Authenticated
            : User match
Headers     : x-access-token
Body        : username [String] [unique check]
            : email    [String] [unique check]
            : name     [String]
Returns     : User details

/************************
* DELETE /api/users/:id *
************************/
Description : Deletes a user
Restrictions: Authenticated
            : User match
Headers     : x-access-token
Body        : --
Returns     : Success

/******************************
* PUT /api/users/:id/password *
******************************/
Description : Changes user password
Restrictions: Authenticated
            : User match
Headers     : x-access-token
Body        : oldPassword [String]
            : newPassword [String]
Returns     : Success

/*************************
* POST /api/users/friend *
*************************/
Description : Adds a user to your friendlist
Restrictions: Authenticated
Headers     : x-access-token
Body        : userId [String]
Returns     : User details

/***************************
* POST /api/users/unfriend *
***************************/
Description : Removes a user from your friendlist
Restrictions: Authenticated
Headers     : x-access-token
Body        : userId [String]
Returns     : User details


/*************************
* LOG3900-01 A16 backend *
* Zone API details       *
*************************/

/*****************
* GET /api/zones *
*****************/
Description : Returns a list of zones
Restrictions: Authenticated
Headers     : x-access-token
Body        : --
Returns     : Zones

/******************
* POST /api/zones *
******************/
Description : Creates a new zone
Restrictions: Authenticated
Headers     : x-access-token
Body        : name      [String] [not null]
            : private   [Boolean]
            : password  [String]
            : thumbnail [String]
            : nodes     [Array]
Returns     : Created zone

/*********************
* GET /api/zones/:id *
*********************/
Description : Returns a zone
Restrictions: Authenticated
Headers     : x-access-token
            : password [optional]
Body        : --
Returns     : Zone infos

/*************************
* PUT /api/zones/:userId *
*************************/
Description : Updates a zone infos
Restrictions: Authenticated
Headers     : x-access-token
            : password [optional]
Body        : name      [String] [not null]
            : private   [Boolean]
            : password  [String]
            : thumbnail [String]
            : stats     not yet implemented
            : nodes     [Array]
Returns     : Zone infos

/************************
* DELETE /api/zones/:id *
************************/
Description : Deletes a zone
Restrictions: Authenticated
Headers     : x-access-token
Body        : --
Returns     : Success


/*************************
* LOG3900-01 A16 backend *
* Socket.io details      *
* Client->Server         *
*************************/

/**********
* connect *
**********/
Description: Request a Socket.io connection
Body       : --

/***************
* authenticate *
***************/
Description: Authenticate user to grant socket init
Body       : token [String]

/************
* init:chat *
************/
Description: Enable or disable chat functions (enable by default)
Body       : value [Bolean] [optional]

/*************
* disconnect *
*************/
Description: Terminate a Socket.io connection
Body       : --

/****************
* join:chatroom *
****************/
Description: Join a chatroom
Body       : room [String]

/*****************
* leave:chatroom *
*****************/
Description: Leave a chatroom
Body       : room [String]

/*********************
* send:group:message *
*********************/
Description: Send a group message to a room
Body       : to   [String]
           : text [String]

/***********************
* send:private:message *
***********************/
Description: Send a private message to a user
Body       : to   [String]
           : text [String]

/************
* join:zone *
************/
Description: Join a zone's room
Body       : zoneId   [String]
           : password [String] [optional]

/*************
* leave:zone *
*************/
Description: Leave a zone's room
Body       : --

/*************
* edit:nodes *
*************/
Description: Edit nodes online
Body       : nodes [Array]

/***************
* create:nodes *
***************/
Description: Create nodes online
Body       : nodes [Array]

/***************
* delete:nodes *
***************/
Description: Delete nodes online
Body       : nodes [Array]

/*************
* lock:nodes *
*************/
Description: Lock nodes to prevent edit from other users
Body       : nodes [Array]

/***************
* unlock:nodes *
***************/
Description: Unlock nodes to allow edit from other users
Body       : nodes [Array]

/****************
* ping:position *
****************/
Description: Ping a position for users to see
Body       : position [Object]

/*************************
* LOG3900-01 A16 backend *
* Socket.io details      *
* Server->Client         *
*************************/

/**********
* connect *
**********/
Description: Accept a Socket.io connection
Body       : --

/*******
* init *
*******/
Description: Initialize an accepted Socket.io connection with user infos
Body       : user [Object]
           : time [Integer]

/*********************
* send:group:message *
*********************/
Description: Send a group message to a room
Body       : from [Object]
           : room [String]
           : text [String]
           : time [Integer]

/***********************
* send:private:message *
***********************/
Description: Send a private message to a user
Body       : from [Object]
           : to   [Object]
           : text [String]
           : time [Integer]

/************
* user:join *
************/
Description: Tell a user has joined a room
Body       : room [String]
           : user [Object]
           : time [Integer]

/************
* user:left *
************/
Description: Tell a user has left
Body       : user [Object]
           : time [Integer]

/******************
* joined:chatroom *
******************/
Description: Return join:chatroom feedback to caller
Body       : success  [Boolean]
           : message  [String] [optional]
           : room     [String]
           : users    [Array] [optional]
           : messages [Array] [optional]
           : time     [Integer]

/****************
* left:chatroom *
****************/
Description: Return leave:chatroom feedback to caller
Body       : success [Boolean]
           : message [String] [optional]
           : room    [String]
           : time    [Integer]

/************
* join:zone *
************/
Description: Tell a user (_id and username) has joined the zone
Body       : user [Object]
           : time [Integer]

/**************
* joined:zone *
**************/
Description: Return join:zone feedback to caller
Body       : success [Boolean]
           : error   [Object] [optional]
           : message [String] [optional]
           : zoneId  [String]
           : data    [Object]
           : time    [Integer]

/*************
* leave:zone *
*************/
Description: Tell a user has left the zone
Body       : user [Object]
           : time [Integer]

/************
* left:zone *
************/
Description: Return leave:zone feedback to caller
Body       : success [Boolean]
           : message [String] [optional]
           : time    [Integer]

/********************
* assign:startpoint *
********************/
Description: Assign a user to a startpoint
Body       : user   [Object]
           : nodeId [String]
           : time   [Integer]

/**********************
* assigned:startpoint *
**********************/
Description: Return assign:startpoint feedback to caller
Body       : success [Boolean]
           : nodeId  [String]
           : time    [Integer]

/**********************
* unassign:startpoint *
**********************/
Description: Unassign a user from a startpoint
Body       : user   [Object]
           : nodeId [String]
           : time   [Integer]

/*************
* edit:nodes *
*************/
Description: Send edit request to all listening clients
Body       : user  [Object]
           : nodes [Array]
           : time  [Integer]

/***************
* edited:nodes *
***************/
Description: Return edit:nodes feedback to caller
Body       : success [Boolean]
           : error   [Object] [optional]
           : message [String] [optional]
           : nodes   [Array]
           : time    [Integer]

/***************
* create:nodes *
***************/
Description: Send create request to all listening clients
Body       : user  [Object]
           : nodes [Array]
           : time  [Integer]

/****************
* created:nodes *
****************/
Description: Return create:nodes feedback to caller
Body       : success [Boolean]
           : error   [Object] [optional]
           : message [String] [optional]
           : nodes   [Array]
           : time    [Integer]

/***************
* delete:nodes *
***************/
Description: Send delete request to all listening clients
Body       : user  [Object]
           : nodes [Array]
           : time  [Integer]

/****************
* deleted:nodes *
****************/
Description: Return delete:nodes feedback to caller
Body       : success [Boolean]
           : error   [Object] [optional]
           : message [String] [optional]
           : nodes   [Array]
           : time    [Integer]

/*************
* lock:nodes *
*************/
Description: Send lock request to to all listening clients
Body       : user  [Object]
           : nodes [Array]
           : time  [Integer]

/***************
* locked:nodes *
***************/
Description: Return lock:nodes feedback to caller
Body       : success [Boolean]
           : message [String] [optional]
           : nodes   [Array]
           : time    [Integer]

/***************
* unlock:nodes *
***************/
Description: Send unlock request to to all listening clients
Body       : nodes [Array]
           : time  [Integer]

/*****************
* unlocked:nodes *
*****************/
Description: Return unlock:nodes feedback to caller
Body       : success [Boolean]
           : message [String] [optional]
           : nodes   [Array]
           : time    [Integer]

/****************
* ping:position *
****************/
Description: Transmit user ping to all listening clients
Body       : user     [Object]
           : position [Object]
           : time     [Integer]
